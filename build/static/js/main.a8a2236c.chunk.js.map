{"version":3,"sources":["components/services.js","app.js","index.js"],"names":["Axios","get","then","response","data","NewObj","post","deleteObj","delete","id","App","useState","persons","setPersons","newName","setNewName","newPhoneN","setNewPhoneN","filter","setFilter","useEffect","services","onSubmit","event","nameRepeats","preventDefault","nameObject","name","number","map","person","alert","concat","catch","error","setTimeout","value","onChange","target","type","includes","filteredName","key","className","onClick","delObject","window","confirm","ReactDOM","render","document","getElementById"],"mappings":"mOAkBe,EAfA,WAEX,OADgBA,IAAMC,IAHV,iBAIGC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAACC,GAEZ,OADgBL,IAAMM,KARV,gBAQwBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALO,SAACG,GAEnB,OADgBP,IAAMQ,OAbV,gBAa2BD,EAAUE,IAClCP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCuF9BM,EAnGH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACPC,EADO,KACEC,EADF,OAEgBF,mBAAS,IAFzB,mBAEPG,EAFO,KAEEC,EAFF,OAGoBJ,mBAAS,IAH7B,mBAGPK,EAHO,KAGIC,EAHJ,OAIcN,mBAAS,IAJvB,mBAIPO,EAJO,KAICC,EAJD,OAK0BR,mBAAS,MALnC,6BAOdS,qBAAU,WACNC,IAAkBnB,MAAK,SAAAC,GAAQ,OAAIU,EAAWV,QAC/C,IA+DH,OACE,6BACE,yCACA,0BAAMmB,SAhEQ,SAACC,GACf,IAAIC,GAAc,EAClBD,EAAME,iBACN,IAAMC,EAAa,CACfC,KAAMb,EACNc,OAAQZ,GAEZJ,EAAQiB,KAAI,SAAAC,GACLA,EAAOH,OAASD,EAAWC,MAAQG,EAAOF,SAAWF,EAAWE,SAC/DG,MAAML,EAAWC,KAAO,qDACxBH,GAAc,OAGF,IAAhBA,IACAX,EAAWD,EAAQoB,OAAON,IAC1BL,EAAgBK,GAAYxB,MAAK,SAAAC,GAC7BU,EAAWD,EAAQoB,OAAO7B,OAC/B8B,OAAM,SAAAC,GACLC,WAAW,GAER,SAIPpB,EAAW,IACXE,EAAa,MAwCX,uCAAY,2BAAOmB,MAAOtB,EAASuB,SArChB,SAACd,GACtBR,EAAWQ,EAAMe,OAAOF,UAoCtB,KACA,+CAAoB,2BAAOA,MAAOpB,EAAWqB,SAlCzB,SAACd,GACvBN,EAAaM,EAAMe,OAAOF,UAiCxB,KACA,iCAAM,4BAAQG,KAAK,UAAb,OAAN,MAEF,uCACA,wCACY,2BAAOH,MAAOlB,EAAQmB,SAnCf,SAACd,GACpBJ,EAAUI,EAAMe,OAAOF,WAsCvB,6BACKxB,EAAQM,QAAO,SAAAY,GAAM,OAAIA,EAAOH,KAAKa,SAAStB,MAASW,KAAI,SAAAY,GAAY,OACpE,wBAAIC,IAAKD,EAAahC,GAAIkC,UAAU,SAC/BF,EAAad,KADlB,MAC2Bc,EAAab,OACnC,4BAAQgB,QAAW,kBAvCbC,EAuCiCJ,OAtCjDK,OAAOC,QAAQ,mCAAoCF,EAAUlB,OAC5DN,EAAuBwB,GAAW3C,MAAK,SAAAC,GACnCkB,IAAkBnB,MAAK,SAAAC,GAAQ,OAAIU,EAAWV,SAC/C8B,OAAM,SAAAC,GACLH,MAAM,mBAAoBc,EAAUlB,KAAM,+CALhC,IAACkB,IAuCN,iB,MCvFrBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a8a2236c.chunk.js","sourcesContent":["import Axios from 'axios'\nconst baseUrl = '/api/persons/'\n\nconst getAll = () => {\n    const promise = Axios.get(baseUrl)\n    return promise.then(response => response.data)\n}\n\nconst create = (NewObj) => {\n    const request = Axios.post(baseUrl, NewObj)\n    return request.then(response => response.data)\n}\n\nconst deleteContact = (deleteObj) => {\n    const request = Axios.delete(baseUrl + deleteObj.id)\n    return request.then(response => response.data)\n}\n\nexport default {\n    getAll, create, deleteContact\n}","import React, {useState, useEffect} from 'react'\nimport services from './components/services'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState(\"\")\n    const [newPhoneN, setNewPhoneN] = useState(\"\")\n    const [filter, setFilter] = useState('')\n    const [errorMessage, setErrorMessage] = useState(null)\n    \n    useEffect(()=> {\n        services.getAll().then(response => setPersons(response))\n    }, [])\n\n    const addPerson = (event) =>{\n        var nameRepeats = false\n        event.preventDefault()\n        const nameObject = {\n            name: newName,\n            number: newPhoneN,\n        }\n        persons.map(person => {\n            if(person.name === nameObject.name || person.number === nameObject.number){\n                alert(nameObject.name + \"'s name/number is already added to the phone book\")\n                nameRepeats = true\n            }\n        })\n        if (nameRepeats === false){\n            setPersons(persons.concat(nameObject))\n            services.create(nameObject).then(response => {\n                setPersons(persons.concat(response))\n        }).catch(error => {\n            setTimeout({\n\n            }, 5000)\n        })\n        }\n        \n        setNewName(\"\")\n        setNewPhoneN(\"\")\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handlePhoneChange = (event) => {\n        setNewPhoneN(event.target.value)\n    }\n        \n    const contactsToShow = (event) =>{\n        setFilter(event.target.value)\n    }\n\n    const deleteContact = (delObject) => {\n        if(window.confirm(\"Are you sure you want to delete \", delObject.name)){\n            services.deleteContact(delObject).then(response => {\n                services.getAll().then(response => setPersons(response))\n            }).catch(error => {\n                alert('The contact for ', delObject.name, ' has encountered an error being deleted')\n            })\n        }\n    }\n\n    const ErrorMessage = (message) => {\n        if (message === null) {\n            return null\n        }\n        return(\n            <div className='error'>\n                {message}\n            </div>\n        )\n    }\n\n    return(\n      <div>\n        <h2>Phonebook</h2>\n        <form onSubmit={addPerson}> \n          <div> name: <input value={newName} onChange={handleNameChange}/> </div>\n          <div> phone number: <input value={newPhoneN} onChange={handlePhoneChange}/> </div>\n          <div> <button type=\"submit\">add</button> </div>\n        </form>\n        <h2>Numbers</h2>\n        <div>\n            filter: <input value={filter} onChange={contactsToShow}/>\n        </div>\n        \n        \n        <div>\n            {persons.filter(person => person.name.includes(filter)).map(filteredName => (\n                <li key={filteredName.id} className='notes'>\n                    {filteredName.name} : {filteredName.number} \n                    {<button onClick = {() => deleteContact(filteredName)}>Delete</button>}\n                </li>\n            ))}\n        </div>  \n      </div>\n    )\n      \n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app.js'\nimport './index.css'\n\n\nReactDOM.render(<App /> ,document.getElementById('root'))"],"sourceRoot":""}